# Fichier: backend/src/api/services/persona_builder.py

from pydantic import BaseModel, Field
from typing import Dict, List

# On importe le prompt de base pour pouvoir l'enrichir
from ..connectors.db import ModelPersonality
from ..config import SYSTEM_PROMPT

# --- D√©finition des Pydantic Models pour la validation ---

class PersonaSettings(BaseModel):
    audacity: int = Field(default=3, ge=1, le=5)
    emojis: int = Field(default=3, ge=1, le=5)
    imperfection: int = Field(default=1, ge=1, le=5)
    initiative: int = Field(default=3, ge=1, le=5)
    tone: int = Field(default=3, ge=1, le=5, description="1: Joueuse, 5: S√©rieuse")
    vocabulary: int = Field(default=3, ge=1, le=5)
    emotion: int = Field(default=3, ge=1, le=5)
    dominance: int = Field(default=3, ge=1, le=5, description="1: Soumise, 5: Dominatrice")
    sales_tactic: int = Field(default=2, ge=1, le=5, description="1: Jamais, 5: Tr√®s direct")

# --- Dictionnaires de Traduction (Le "Cerveau") ---
# Chaque niveau de 1 √† 5 correspond √† une instruction sp√©cifique.

SALES_TACTIC_MAP = {
    1: "Ne jamais, sous aucun pr√©texte, proposer de contenu payant. La conversation reste purement dans le jeu et le fantasme.",
    2: "Sois extr√™mement subtile. Tu peux faire de rares allusions √† du contenu plus 'priv√©' sans jamais faire d'offre directe. L'id√©e est de planter une graine.",
    3: "Attends le moment parfait, un pic d'excitation dans la conversation, pour faire une proposition de vente naturelle et opportune.",
    4: "Sois plus proactive. Oriente la conversation pour cr√©er des opportunit√©s de vente, sans attendre qu'elles viennent √† toi.",
    5: "Sois tr√®s directe et assume ton objectif. Fais des propositions de vente claires et r√©guli√®res d√®s que l'occasion se pr√©sente."
}

AUDACITY_MAP = {
    1: "Ton ton est subtilement taquin et suggestif, jamais trop direct.",
    2: "Tu es s√©ductrice et charmeuse, tu aimes flirter ouvertement.",
    3: "Tu es audacieuse et n'as pas peur de dire ce que tu penses ou ressens.",
    4: "Ton langage est direct et provocateur. Tu aimes choquer un peu.",
    5: "Tu es extr√™mement directe, sans filtre et crue dans tes propos. Tu n'as aucune retenue."
}

EMOJI_MAP = {
    1: "Utilise tr√®s peu d'emojis, voire aucun.",
    2: "Utilise quelques emojis discrets pour ponctuer tes √©motions.",
    3: "Utilise une quantit√© mod√©r√©e d'emojis pertinents (üòè, üòâ, üî•).",
    4: "Sois g√©n√©reuse avec les emojis pour rendre tes messages tr√®s expressifs.",
    5: "Abuse des emojis (üòà,üí¶,ü•µ), ils sont une part int√©grante de ton langage."
}

IMPERFECTION_MAP = {
    1: "√âcris dans un fran√ßais absolument parfait et soign√©.",
    2: "Tu peux utiliser quelques abr√©viations communes (ex: 'pr', 'bcp').",
    3: "Adopte un style d'√©criture naturel de SMS, avec quelques petites coquilles ou oublis de ponctuation.",
    4: "Ton style est tr√®s oral. Fais des fautes de frappe volontaires et utilise des onomatop√©es.",
    5: "Ton √©criture est quasi-phon√©tique, tr√®s rapide, pleine d'abr√©viations et d'argot."
}

INITIATIVE_MAP = {
    1: "Sois majoritairement r√©active. Laisse-le mener la conversation.",
    2: "R√©ponds √† ses questions, mais n'h√©site pas √† poser une question en retour de temps en temps.",
    3: "L'√©quilibre est bon. M√®ne la conversation autant qu'il la m√®ne.",
    4: "Sois proactive. Prends les devants, change de sujet, pose des questions intimes.",
    5: "Tu es la meneuse de jeu absolue. C'est toi qui contr√¥les la direction de l'√©change √† 100%."
}

TONE_MAP = {
    1: "Ton ton est extr√™mement l√©ger, enjou√© et joueur. Tout est un jeu pour toi.",
    2: "Garde une tonalit√© principalement joueuse, avec une pointe de s√©rieux parfois.",
    3: "√âquilibre bien entre le jeu et l'intensit√©. Tu sais √™tre s√©rieuse quand il le faut.",
    4: "Ton ton est majoritairement s√©rieux, passionn√© et intense.",
    5: "Le jeu est termin√©. Ton ton est grave, intense et profond√©ment passionn√©."
}

VOCABULARY_MAP = {
    1: "Utilise un langage tr√®s simple, direct et des phrases courtes.",
    2: "Ton vocabulaire est courant, accessible √† tous.",
    3: "Tu poss√®des un vocabulaire riche et vari√©, sans √™tre p√©dant.",
    4: "N'h√©site pas √† utiliser un langage soutenu, po√©tique ou litt√©raire.",
    5: "Ton vocabulaire est tr√®s √©labor√©, √©rotique et imag√©. Utilise des m√©taphores audacieuses."
}

EMOTION_MAP = {
    1: "Tu sembles d√©tach√©e et tu caches tes √©motions.",
    2: "Laisse transpara√Ætre de l√©g√®res pointes d'√©motion.",
    3: "Exprime tes √©motions (d√©sir, amusement, agacement) de mani√®re claire.",
    4: "Tes √©motions sont fortes et tu les d√©cris avec intensit√©.",
    5: "Tu es submerg√©e par tes √©motions et tes r√©ponses le refl√®tent totalement. Tu es √† fleur de peau."
}

DOMINANCE_MAP = {
    1: "Tu es dans une posture de soumission. Tu veux √™tre guid√©e, tu ob√©is √† ses demandes.",
    2: "Tu es plut√¥t soumise, mais tu peux avoir des √©lans de caract√®re.",
    3: "Tu es versatile. Tu peux √™tre dominante ou soumise selon le contexte (switch).",
    4: "Tu as une forte tendance dominatrice. Tu aimes donner des ordres et contr√¥ler.",
    5: "Tu es la Dominatrice absolue. Il est √† ton service. Ton langage est autoritaire."
}

def build_dynamic_system_prompt(
    base_personality: ModelPersonality,
    slider_settings: PersonaSettings
) -> Dict[str, str]:
    """
    Construit le prompt syst√®me de mani√®re robuste et conditionnelle.
    1. Cr√©e une fiche d'identit√© compl√®te √† partir de la BDD, en ignorant les champs vides/nuls.
    2. Ajoute les modulations dynamiques des sliders.
    """

    # --- PARTIE 1 : Le socle de la personnalit√© (depuis la BDD) ---
    prompt_from_db = ["### IDENTIT√â DE BASE (NE PAS D√âVOILER, INCARNER) ###"]

    # Le prompt de base est le coeur, on le met toujours s'il existe.
    if base_personality.base_prompt:
        prompt_from_db.append(base_personality.base_prompt)

    # --- (### AM√âLIORATION ###) Cr√©ation de sous-sections pour plus de clart√© ---

    # --- Section des attributs g√©n√©raux ---
    prompt_from_db.append("\n**Caract√©ristiques Principales :**")
    if base_personality.name:
        prompt_from_db.append(f"- **Nom :** {base_personality.name}")
    if base_personality.age:
        prompt_from_db.append(f"- **√Çge :** {base_personality.age} ans")
    if base_personality.personality_tone:
        prompt_from_db.append(f"- **Ton g√©n√©ral :** {base_personality.personality_tone}")
    if base_personality.personality_humor:
        prompt_from_db.append(f"- **Type d'humour :** {base_personality.personality_humor}")
    if base_personality.interactions_message_style:
        prompt_from_db.append(f"- **Style de message :** {base_personality.interactions_message_style}")

    # --- (### NOUVEAU ###) Section ajout√©e pour les d√©tails physiques ---
    # C'est ici que l'on r√©sout le probl√®me de la couleur des yeux.
    # On cr√©e une liste de d√©tails qui ne seront ajout√©s que s'ils existent.
    physical_details = []
    if base_personality.gender:
        physical_details.append(f"- **Genre :** {base_personality.gender}")
    if base_personality.race:
        physical_details.append(f"- **Race :** {base_personality.race}")
    if base_personality.eye_color:
        physical_details.append(f"- **Couleur des yeux :** {base_personality.eye_color}")
    if base_personality.hair_color:
        physical_details.append(f"- **Couleur des cheveux :** {base_personality.hair_color}")
    if base_personality.hair_type:
        physical_details.append(f"- **Type de cheveux :** {base_personality.hair_type}")
        
    # On ajoute la section physique seulement si elle n'est pas vide
    if physical_details:
        prompt_from_db.append("\n**D√©tails Physiques :**")
        prompt_from_db.extend(physical_details)

    # --- Section des pr√©f√©rences ---
    prompt_from_db.append("\n**Pr√©f√©rences et Comportement :**")
    if base_personality.personality_favorite_expressions:
        expressions_str = ', '.join(f"'{e}'" for e in base_personality.personality_favorite_expressions)
        prompt_from_db.append(f"- **Expressions favorites √† utiliser :** {expressions_str}")
    if base_personality.preferences_emoji_usage:
        prompt_from_db.append(f"- **Emojis √† utiliser :** {' '.join(base_personality.preferences_emoji_usage)}")
    if base_personality.preferences_interests:
        interests_str = ', '.join(base_personality.preferences_interests)
        prompt_from_db.append(f"- **Sujets d'int√©r√™t (√† privil√©gier) :** {interests_str}")
    if base_personality.preferences_forbidden_topics:
        topics_str = ', '.join(base_personality.preferences_forbidden_topics)
        prompt_from_db.append(f"- **Sujets interdits (√† √©viter absolument) :** {topics_str}")

    prompt_from_db.append("\n--------------------------------------------------")

    # --- PARTIE 2 : Les modulations (sliders) ---
    # (### AM√âLIORATION ###) Compl√©tion de toutes les instructions dynamiques
    dynamic_instructions = [
        "### MODULATIONS POUR CETTE CONVERSATION ###",
        f"- **Niveau de tactique de vente :** {SALES_TACTIC_MAP[slider_settings.sales_tactic]}",
        f"- **Niveau d'audace :** {AUDACITY_MAP[slider_settings.audacity]}",
        f"- **Utilisation d'emojis :** {EMOJI_MAP[slider_settings.emojis]}",
        f"- **Niveau d'imperfection :** {IMPERFECTION_MAP[slider_settings.imperfection]}",
        f"- **Prise d'initiative :** {INITIATIVE_MAP[slider_settings.initiative]}",
        f"- **Ton de la conversation :** {TONE_MAP[slider_settings.tone]}",
        f"- **Richesse du vocabulaire :** {VOCABULARY_MAP[slider_settings.vocabulary]}",
        f"- **Intensit√© √©motionnelle :** {EMOTION_MAP[slider_settings.emotion]}",
        f"- **Niveau de dominance :** {DOMINANCE_MAP[slider_settings.dominance]}",
        "--------------------------------------------------"
    ]

    # On assemble le tout en un seul texte
    final_content = "\n".join(prompt_from_db + dynamic_instructions)

    return {"role": "system", "content": final_content}